{"version":3,"sources":["mdlcomponentHandler.js","switch.js","button.js","popup.js","radio.js","selectfield.js","snackbar.js","spinner.js","textfield.js","tooltip.js","utils.js"],"names":["_typeof","Symbol","iterator","obj","constructor","prototype","componentHandler","upgradeDom","optJsClass","optCssClass","upgradeElement","element","upgradeElements","elements","upgradeAllRegistered","registerUpgradedCallback","jsClass","callback","register","config","downgradeElements","nodes","registeredComponents_","createdComponents_","componentConfigProperty_","findRegisteredClass_","name","optReplace","i","length","className","getUpgradedListOfElement_","dataUpgraded","getAttribute","split","isElementUpgraded_","indexOf","createEvent_","eventType","bubbles","cancelable","window","CustomEvent","ev","document","createEvent","initEvent","upgradeDomInternal","cssClass","registeredClass","querySelectorAll","n","upgradeElementInternal","Element","Error","upgradingEv","dispatchEvent","defaultPrevented","upgradedList","classesToUpgrade","push","classList","forEach","component","contains","setAttribute","join","instance","classConstructor","j","m","callbacks","widget","upgradedEv","deconstructComponentInternal","componentIndex","splice","upgrades","element_","componentPlace","classAsString","upgradeElementsInternal","Array","isArray","slice","call","HTMLElement","children","regClass","newConfig","item","hasOwnProperty","downgradeNode","node","filter","NodeList","Node","ComponentConfigPublic","ComponentConfig","Component","addEventListener","createElement","documentElement","add","MaterialSwitch","this","init","Constant_","TINY_TIMEOUT","CssClasses_","INPUT","TRACK","THUMB","FOCUS_HELPER","RIPPLE_EFFECT","RIPPLE_IGNORE_EVENTS","RIPPLE_CONTAINER","RIPPLE_CENTER","RIPPLE","IS_FOCUSED","IS_DISABLED","IS_CHECKED","onChange_","event","updateClasses_","onFocus_","onBlur_","remove","onMouseUp_","blur_","checkDisabled","checkToggleState","setTimeout","inputElement_","blur","bind","disabled","checked","disable","enable","on","off","querySelector","track","thumb","focusHelper","appendChild","boundMouseUpHandler","rippleContainerElement_","ripple","boundChangeHandler","boundFocusHandler","boundBlurHandler","MaterialButton","blurHandler_","rippleContainer","rippleElement_","boundRippleBlurHandler","boundButtonBlurHandler","_createClass","defineProperties","target","props","descriptor","enumerable","configurable","writable","Object","defineProperty","key","Constructor","protoProps","staticProps","_toConsumableArray","arr","arr2","from","_classCallCheck","TypeError","Popup","self","background","bg_animation","touch","lang","search_engine","keys","shortcuts","exclude_urls","value","o1","o2","prop","val","o3","prop1","selectOption","elem","options","selectedIndex","elem1","getElementById","elem2","_elem","parentNode","changed","_this","Promise","resolve","reject","chrome","storage","local","get","items","storage_obj","search_props_","JSON","parse","rewriteProps","set","stringify","testSettings","changeViewSettings","_this2","removeOptions","select","option","textContent","addOptions","all","firstElementChild","removeChild","selected","indx","validate","re","selector","e","test","input","buildOptions","saveSearchProps","_this3","tagName","toLowerCase","type","id","open","approveInputData","switchLang","extension","getURL","toggleHelp","toggle","elems","concat","el","o","dataset","innerHTML","click","tabs","query","active","currentWindow","url","console","assert","clear","popup","messageReceivingEnd","then","result","setLangOnload","error","log","message","blurValidate","docEvents","MaterialRadio","IS_UPGRADED","JS_RADIO","RADIO_BTN","RADIO_OUTER_CIRCLE","RADIO_INNER_CIRCLE","radios","getElementsByClassName","btnElement_","onMouseup_","check","uncheck","boundChangeHandler_","boundFocusHandler_","boundBlurHandler_","boundMouseUpHandler_","outerCircle","innerCircle","MaterialSelectfield","LABEL","SELECT","IS_DIRTY","IS_INVALID","onReset_","checkValidity","checkDirty","select_","validity","valid","change","label_","boundUpdateClassesHandler","boundResetHandler","invalid","mdlDowngrade_","removeEventListener","MaterialSnackbar","textElement_","cssClasses_","MESSAGE","actionElement_","ACTION","actionHandler_","undefined","message_","actionText_","queuedNotifications_","setActionHidden_","ANIMATION_LENGTH","SNACKBAR","ACTIVE","displaySnackbar_","cleanup_","timeout_","showSnackbar","data","checkQueue_","shift","Boolean","removeAttribute","MaterialSpinner","MDL_SPINNER_LAYER_COUNT","MDL_SPINNER_LAYER","MDL_SPINNER_CIRCLE_CLIPPER","MDL_SPINNER_CIRCLE","MDL_SPINNER_GAP_PATCH","MDL_SPINNER_LEFT","MDL_SPINNER_RIGHT","createLayer","index","layer","leftClipper","gapPatch","rightClipper","circleOwners","circle","stop","start","MaterialTextfield","maxRows","NO_MAX_ROWS","MAX_ROWS_ATTRIBUTE","HAS_PLACEHOLDER","onKeyDown_","currentRowCount","keyCode","preventDefault","checkFocus","input_","hasAttribute","parseInt","isNaN","boundKeyDownHandler","focus","MaterialTooltip","IS_ACTIVE","BOTTOM","LEFT","RIGHT","TOP","handleMouseEnter_","getBoundingClientRect","left","width","top","height","marginLeft","offsetWidth","marginTop","offsetHeight","style","hideTooltip_","forElId","forElement_","boundMouseEnterHandler","boundMouseLeaveAndScrollHandler","utils","parseSvg","svg","sMyString","DOMParser","parseFromString","addElement","tag","cls","text","attr","buildCustomDom","html","doc","implementation","createHTMLDocument","extend","f","p"],"mappings":"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","file":"../bundle.popup.min.js","sourcesContent":["'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\n/**\r\n * @license\r\n * Copyright 2015 Google Inc. All Rights Reserved.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *      http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * A component handler interface using the revealing module design pattern.\r\n * More details on this design pattern here:\r\n * https://github.com/jasonmayes/mdl-component-design-pattern\r\n *\r\n * @author Jason Mayes\r\n */\n/* exported componentHandler */\n\n// Pre-defining the componentHandler interface, for closure documentation and\n// static verification.\nvar componentHandler = {\n  /**\r\n   * Searches existing DOM for elements of our component type and upgrades them\r\n   * if they have not already been upgraded.\r\n   *\r\n   * @param {string=} optJsClass the programatic name of the element class we\r\n   * need to create a new instance of.\r\n   * @param {string=} optCssClass the name of the CSS class elements of this\r\n   * type will have.\r\n   */\n  upgradeDom: function upgradeDom(optJsClass, optCssClass) {},\n  /**\r\n   * Upgrades a specific element rather than all in the DOM.\r\n   *\r\n   * @param {!Element} element The element we wish to upgrade.\r\n   * @param {string=} optJsClass Optional name of the class we want to upgrade\r\n   * the element to.\r\n   */\n  upgradeElement: function upgradeElement(element, optJsClass) {},\n  /**\r\n   * Upgrades a specific list of elements rather than all in the DOM.\r\n   *\r\n   * @param {!Element|!Array<!Element>|!NodeList|!HTMLCollection} elements\r\n   * The elements we wish to upgrade.\r\n   */\n  upgradeElements: function upgradeElements(elements) {},\n  /**\r\n   * Upgrades all registered components found in the current DOM. This is\r\n   * automatically called on window load.\r\n   */\n  upgradeAllRegistered: function upgradeAllRegistered() {},\n  /**\r\n   * Allows user to be alerted to any upgrades that are performed for a given\r\n   * component type\r\n   *\r\n   * @param {string} jsClass The class name of the MDL component we wish\r\n   * to hook into for any upgrades performed.\r\n   * @param {function(!HTMLElement)} callback The function to call upon an\r\n   * upgrade. This function should expect 1 parameter - the HTMLElement which\r\n   * got upgraded.\r\n   */\n  registerUpgradedCallback: function registerUpgradedCallback(jsClass, callback) {},\n  /**\r\n   * Registers a class for future use and attempts to upgrade existing DOM.\r\n   *\r\n   * @param {componentHandler.ComponentConfigPublic} config the registration configuration\r\n   */\n  register: function register(config) {},\n  /**\r\n   * Downgrade either a given node, an array of nodes, or a NodeList.\r\n   *\r\n   * @param {!Node|!Array<!Node>|!NodeList} nodes\r\n   */\n  downgradeElements: function downgradeElements(nodes) {}\n};\n\ncomponentHandler = function () {\n  'use strict';\n\n  /** @type {!Array<componentHandler.ComponentConfig>} */\n\n  var registeredComponents_ = [];\n\n  /** @type {!Array<componentHandler.Component>} */\n  var createdComponents_ = [];\n\n  var componentConfigProperty_ = 'mdlComponentConfigInternal_';\n\n  /**\r\n   * Searches registered components for a class we are interested in using.\r\n   * Optionally replaces a match with passed object if specified.\r\n   *\r\n   * @param {string} name The name of a class we want to use.\r\n   * @param {componentHandler.ComponentConfig=} optReplace Optional object to replace match with.\r\n   * @return {!Object|boolean}\r\n   * @private\r\n   */\n  function findRegisteredClass_(name, optReplace) {\n    for (var i = 0; i < registeredComponents_.length; i++) {\n      if (registeredComponents_[i].className === name) {\n        if (typeof optReplace !== 'undefined') {\n          registeredComponents_[i] = optReplace;\n        }\n        return registeredComponents_[i];\n      }\n    }\n    return false;\n  }\n\n  /**\r\n   * Returns an array of the classNames of the upgraded classes on the element.\r\n   *\r\n   * @param {!Element} element The element to fetch data from.\r\n   * @return {!Array<string>}\r\n   * @private\r\n   */\n  function getUpgradedListOfElement_(element) {\n    var dataUpgraded = element.getAttribute('data-upgraded');\n    // Use `['']` as default value to conform the `,name,name...` style.\n    return dataUpgraded === null ? [''] : dataUpgraded.split(',');\n  }\n\n  /**\r\n   * Returns true if the given element has already been upgraded for the given\r\n   * class.\r\n   *\r\n   * @param {!Element} element The element we want to check.\r\n   * @param {string} jsClass The class to check for.\r\n   * @returns {boolean}\r\n   * @private\r\n   */\n  function isElementUpgraded_(element, jsClass) {\n    var upgradedList = getUpgradedListOfElement_(element);\n    return upgradedList.indexOf(jsClass) !== -1;\n  }\n\n  /**\r\n   * Create an event object.\r\n   *\r\n   * @param {string} eventType The type name of the event.\r\n   * @param {boolean} bubbles Whether the event should bubble up the DOM.\r\n   * @param {boolean} cancelable Whether the event can be canceled.\r\n   * @returns {!Event}\r\n   */\n  function createEvent_(eventType, bubbles, cancelable) {\n    if ('CustomEvent' in window && typeof window.CustomEvent === 'function') {\n      return new CustomEvent(eventType, {\n        bubbles: bubbles,\n        cancelable: cancelable\n      });\n    } else {\n      var ev = document.createEvent('Events');\n      ev.initEvent(eventType, bubbles, cancelable);\n      return ev;\n    }\n  }\n\n  /**\r\n   * Searches existing DOM for elements of our component type and upgrades them\r\n   * if they have not already been upgraded.\r\n   *\r\n   * @param {string=} optJsClass the programatic name of the element class we\r\n   * need to create a new instance of.\r\n   * @param {string=} optCssClass the name of the CSS class elements of this\r\n   * type will have.\r\n   */\n  function upgradeDomInternal(optJsClass, optCssClass) {\n    if (typeof optJsClass === 'undefined' && typeof optCssClass === 'undefined') {\n      for (var i = 0; i < registeredComponents_.length; i++) {\n        upgradeDomInternal(registeredComponents_[i].className, registeredComponents_[i].cssClass);\n      }\n    } else {\n      var jsClass = /** @type {string} */optJsClass;\n      if (typeof optCssClass === 'undefined') {\n        var registeredClass = findRegisteredClass_(jsClass);\n        if (registeredClass) {\n          optCssClass = registeredClass.cssClass;\n        }\n      }\n\n      var elements = document.querySelectorAll('.' + optCssClass);\n      for (var n = 0; n < elements.length; n++) {\n        upgradeElementInternal(elements[n], jsClass);\n      }\n    }\n  }\n\n  /**\r\n   * Upgrades a specific element rather than all in the DOM.\r\n   *\r\n   * @param {!Element} element The element we wish to upgrade.\r\n   * @param {string=} optJsClass Optional name of the class we want to upgrade\r\n   * the element to.\r\n   */\n  function upgradeElementInternal(element, optJsClass) {\n    // Verify argument type.\n    if (!((typeof element === 'undefined' ? 'undefined' : _typeof(element)) === 'object' && element instanceof Element)) {\n      throw new Error('Invalid argument provided to upgrade MDL element.');\n    }\n    // Allow upgrade to be canceled by canceling emitted event.\n    var upgradingEv = createEvent_('mdl-componentupgrading', true, true);\n    element.dispatchEvent(upgradingEv);\n    if (upgradingEv.defaultPrevented) {\n      return;\n    }\n\n    var upgradedList = getUpgradedListOfElement_(element);\n    var classesToUpgrade = [];\n    // If jsClass is not provided scan the registered components to find the\n    // ones matching the element's CSS classList.\n    if (!optJsClass) {\n      var classList = element.classList;\n      registeredComponents_.forEach(function (component) {\n        // Match CSS & Not to be upgraded & Not upgraded.\n        if (classList.contains(component.cssClass) && classesToUpgrade.indexOf(component) === -1 && !isElementUpgraded_(element, component.className)) {\n          classesToUpgrade.push(component);\n        }\n      });\n    } else if (!isElementUpgraded_(element, optJsClass)) {\n      classesToUpgrade.push(findRegisteredClass_(optJsClass));\n    }\n\n    // Upgrade the element for each classes.\n    for (var i = 0, n = classesToUpgrade.length, registeredClass; i < n; i++) {\n      registeredClass = classesToUpgrade[i];\n      if (registeredClass) {\n        // Mark element as upgraded.\n        upgradedList.push(registeredClass.className);\n        element.setAttribute('data-upgraded', upgradedList.join(','));\n        var instance = new registeredClass.classConstructor(element);\n        instance[componentConfigProperty_] = registeredClass;\n        createdComponents_.push(instance);\n        // Call any callbacks the user has registered with this component type.\n        for (var j = 0, m = registeredClass.callbacks.length; j < m; j++) {\n          registeredClass.callbacks[j](element);\n        }\n\n        if (registeredClass.widget) {\n          // Assign per element instance for control over API\n          element[registeredClass.className] = instance;\n        }\n      } else {\n        throw new Error('Unable to find a registered component for the given class.');\n      }\n\n      var upgradedEv = createEvent_('mdl-componentupgraded', true, false);\n      element.dispatchEvent(upgradedEv);\n    }\n  }\n\n  /**\r\n   * Upgrades a specific list of elements rather than all in the DOM.\r\n   *\r\n   * @param {!Element|!Array<!Element>|!NodeList|!HTMLCollection} elements\r\n   * The elements we wish to upgrade.\r\n   */\n  function upgradeElementsInternal(elements) {\n    if (!Array.isArray(elements)) {\n      if (elements instanceof Element) {\n        elements = [elements];\n      } else {\n        elements = Array.prototype.slice.call(elements);\n      }\n    }\n    for (var i = 0, n = elements.length, element; i < n; i++) {\n      element = elements[i];\n      if (element instanceof HTMLElement) {\n        upgradeElementInternal(element);\n        if (element.children.length > 0) {\n          upgradeElementsInternal(element.children);\n        }\n      }\n    }\n  }\n\n  /**\r\n   * Registers a class for future use and attempts to upgrade existing DOM.\r\n   *\r\n   * @param {componentHandler.ComponentConfigPublic} config\r\n   */\n  function registerInternal(config) {\n    // In order to support both Closure-compiled and uncompiled code accessing\n    // this method, we need to allow for both the dot and array syntax for\n    // property access. You'll therefore see the `foo.bar || foo['bar']`\n    // pattern repeated across this method.\n    var widgetMissing = typeof config.widget === 'undefined' && typeof config['widget'] === 'undefined';\n    var widget = true;\n\n    if (!widgetMissing) {\n      widget = config.widget || config['widget'];\n    }\n\n    var newConfig = /** @type {componentHandler.ComponentConfig} */{\n      classConstructor: config.constructor || config['constructor'],\n      className: config.classAsString || config['classAsString'],\n      cssClass: config.cssClass || config['cssClass'],\n      widget: widget,\n      callbacks: []\n    };\n\n    registeredComponents_.forEach(function (item) {\n      if (item.cssClass === newConfig.cssClass) {\n        throw new Error('The provided cssClass has already been registered: ' + item.cssClass);\n      }\n      if (item.className === newConfig.className) {\n        throw new Error('The provided className has already been registered');\n      }\n    });\n\n    if (config.constructor.prototype.hasOwnProperty(componentConfigProperty_)) {\n      throw new Error('MDL component classes must not have ' + componentConfigProperty_ + ' defined as a property.');\n    }\n\n    var found = findRegisteredClass_(config.classAsString, newConfig);\n\n    if (!found) {\n      registeredComponents_.push(newConfig);\n    }\n  }\n\n  /**\r\n   * Allows user to be alerted to any upgrades that are performed for a given\r\n   * component type\r\n   *\r\n   * @param {string} jsClass The class name of the MDL component we wish\r\n   * to hook into for any upgrades performed.\r\n   * @param {function(!HTMLElement)} callback The function to call upon an\r\n   * upgrade. This function should expect 1 parameter - the HTMLElement which\r\n   * got upgraded.\r\n   */\n  function registerUpgradedCallbackInternal(jsClass, callback) {\n    var regClass = findRegisteredClass_(jsClass);\n    if (regClass) {\n      regClass.callbacks.push(callback);\n    }\n  }\n\n  /**\r\n   * Upgrades all registered components found in the current DOM. This is\r\n   * automatically called on window load.\r\n   */\n  function upgradeAllRegisteredInternal() {\n    for (var n = 0; n < registeredComponents_.length; n++) {\n      upgradeDomInternal(registeredComponents_[n].className);\n    }\n  }\n\n  /**\r\n   * Check the component for the downgrade method.\r\n   * Execute if found.\r\n   * Remove component from createdComponents list.\r\n   *\r\n   * @param {?componentHandler.Component} component\r\n   */\n  function deconstructComponentInternal(component) {\n    if (component) {\n      var componentIndex = createdComponents_.indexOf(component);\n      createdComponents_.splice(componentIndex, 1);\n\n      var upgrades = component.element_.getAttribute('data-upgraded').split(',');\n      var componentPlace = upgrades.indexOf(component[componentConfigProperty_].classAsString);\n      upgrades.splice(componentPlace, 1);\n      component.element_.setAttribute('data-upgraded', upgrades.join(','));\n\n      var ev = createEvent_('mdl-componentdowngraded', true, false);\n      component.element_.dispatchEvent(ev);\n    }\n  }\n\n  /**\r\n   * Downgrade either a given node, an array of nodes, or a NodeList.\r\n   *\r\n   * @param {!Node|!Array<!Node>|!NodeList} nodes\r\n   */\n  function downgradeNodesInternal(nodes) {\n    /**\r\n     * Auxiliary function to downgrade a single node.\r\n     * @param  {!Node} node the node to be downgraded\r\n     */\n    var downgradeNode = function downgradeNode(node) {\n      createdComponents_.filter(function (item) {\n        return item.element_ === node;\n      }).forEach(deconstructComponentInternal);\n    };\n    if (nodes instanceof Array || nodes instanceof NodeList) {\n      for (var n = 0; n < nodes.length; n++) {\n        downgradeNode(nodes[n]);\n      }\n    } else if (nodes instanceof Node) {\n      downgradeNode(nodes);\n    } else {\n      throw new Error('Invalid argument provided to downgrade MDL nodes.');\n    }\n  }\n\n  // Now return the functions that should be made public with their publicly\n  // facing names...\n  return {\n    upgradeDom: upgradeDomInternal,\n    upgradeElement: upgradeElementInternal,\n    upgradeElements: upgradeElementsInternal,\n    upgradeAllRegistered: upgradeAllRegisteredInternal,\n    registerUpgradedCallback: registerUpgradedCallbackInternal,\n    register: registerInternal,\n    downgradeElements: downgradeNodesInternal\n  };\n}();\n\n/**\r\n * Describes the type of a registered component type managed by\r\n * componentHandler. Provided for benefit of the Closure compiler.\r\n *\r\n * @typedef {{\r\n *   constructor: Function,\r\n *   classAsString: string,\r\n *   cssClass: string,\r\n *   widget: (string|boolean|undefined)\r\n * }}\r\n */\ncomponentHandler.ComponentConfigPublic; // jshint ignore:line\n\n/**\r\n * Describes the type of a registered component type managed by\r\n * componentHandler. Provided for benefit of the Closure compiler.\r\n *\r\n * @typedef {{\r\n *   constructor: !Function,\r\n *   className: string,\r\n *   cssClass: string,\r\n *   widget: (string|boolean),\r\n *   callbacks: !Array<function(!HTMLElement)>\r\n * }}\r\n */\ncomponentHandler.ComponentConfig; // jshint ignore:line\n\n/**\r\n * Created component (i.e., upgraded element) type as managed by\r\n * componentHandler. Provided for benefit of the Closure compiler.\r\n *\r\n * @typedef {{\r\n *   element_: !HTMLElement,\r\n *   className: string,\r\n *   classAsString: string,\r\n *   cssClass: string,\r\n *   widget: string\r\n * }}\r\n */\ncomponentHandler.Component; // jshint ignore:line\n\n// Export all symbols, for the benefit of Closure compiler.\n// No effect on uncompiled code.\ncomponentHandler['upgradeDom'] = componentHandler.upgradeDom;\ncomponentHandler['upgradeElement'] = componentHandler.upgradeElement;\ncomponentHandler['upgradeElements'] = componentHandler.upgradeElements;\ncomponentHandler['upgradeAllRegistered'] = componentHandler.upgradeAllRegistered;\ncomponentHandler['registerUpgradedCallback'] = componentHandler.registerUpgradedCallback;\ncomponentHandler['register'] = componentHandler.register;\ncomponentHandler['downgradeElements'] = componentHandler.downgradeElements;\nwindow.componentHandler = componentHandler;\nwindow['componentHandler'] = componentHandler;\n\nwindow.addEventListener('load', function () {\n  'use strict';\n\n  /**\r\n   * Performs a \"Cutting the mustard\" test. If the browser supports the features\r\n   * tested, adds a mdl-js class to the <html> element. It then upgrades all MDL\r\n   * components requiring JavaScript.\r\n   */\n\n  if ('classList' in document.createElement('div') && 'querySelector' in document && 'addEventListener' in window && Array.prototype.forEach) {\n    document.documentElement.classList.add('mdl-js');\n    componentHandler.upgradeAllRegistered();\n  } else {\n    /**\r\n     * Dummy function to avoid JS errors.\r\n     */\n    componentHandler.upgradeElement = function () {};\n    /**\r\n     * Dummy function to avoid JS errors.\r\n     */\n    componentHandler.register = function () {};\n  }\n});","'use strict';\n\n/**\n * @license\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n(function () {\n  'use strict';\n\n  /**\n   * Class constructor for Checkbox MDL component.\n   * Implements MDL component design pattern defined at:\n   * https://github.com/jasonmayes/mdl-component-design-pattern\n   *\n   * @constructor\n   * @param {HTMLElement} element The element that will be upgraded.\n   */\n\n  var MaterialSwitch = function MaterialSwitch(element) {\n    this.element_ = element;\n\n    // Initialize instance.\n    this.init();\n  };\n  window['MaterialSwitch'] = MaterialSwitch;\n\n  /**\n   * Store constants in one place so they can be updated easily.\n   *\n   * @enum {string | number}\n   * @private\n   */\n  MaterialSwitch.prototype.Constant_ = {\n    TINY_TIMEOUT: 0.001\n  };\n\n  /**\n   * Store strings for class names defined by this component that are used in\n   * JavaScript. This allows us to simply change it in one place should we\n   * decide to modify at a later date.\n   *\n   * @enum {string}\n   * @private\n   */\n  MaterialSwitch.prototype.CssClasses_ = {\n    INPUT: 'mdl-switch__input',\n    TRACK: 'mdl-switch__track',\n    THUMB: 'mdl-switch__thumb',\n    FOCUS_HELPER: 'mdl-switch__focus-helper',\n    RIPPLE_EFFECT: 'mdl-js-ripple-effect',\n    RIPPLE_IGNORE_EVENTS: 'mdl-js-ripple-effect--ignore-events',\n    RIPPLE_CONTAINER: 'mdl-switch__ripple-container',\n    RIPPLE_CENTER: 'mdl-ripple--center',\n    RIPPLE: 'mdl-ripple',\n    IS_FOCUSED: 'is-focused',\n    IS_DISABLED: 'is-disabled',\n    IS_CHECKED: 'is-checked'\n  };\n\n  /**\n   * Handle change of state.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\n  MaterialSwitch.prototype.onChange_ = function (event) {\n    this.updateClasses_();\n  };\n\n  /**\n   * Handle focus of element.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\n  MaterialSwitch.prototype.onFocus_ = function (event) {\n    this.element_.classList.add(this.CssClasses_.IS_FOCUSED);\n  };\n\n  /**\n   * Handle lost focus of element.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\n  MaterialSwitch.prototype.onBlur_ = function (event) {\n    this.element_.classList.remove(this.CssClasses_.IS_FOCUSED);\n  };\n\n  /**\n   * Handle mouseup.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\n  MaterialSwitch.prototype.onMouseUp_ = function (event) {\n    this.blur_();\n  };\n\n  /**\n   * Handle class updates.\n   *\n   * @private\n   */\n  MaterialSwitch.prototype.updateClasses_ = function () {\n    this.checkDisabled();\n    this.checkToggleState();\n  };\n\n  /**\n   * Add blur.\n   *\n   * @private\n   */\n  MaterialSwitch.prototype.blur_ = function () {\n    // TODO: figure out why there's a focus event being fired after our blur,\n    // so that we can avoid this hack.\n    window.setTimeout(function () {\n      this.inputElement_.blur();\n    }.bind(this), /** @type {number} */this.Constant_.TINY_TIMEOUT);\n  };\n\n  // Public methods.\n\n  /**\n   * Check the components disabled state.\n   *\n   * @public\n   */\n  MaterialSwitch.prototype.checkDisabled = function () {\n    if (this.inputElement_.disabled) {\n      this.element_.classList.add(this.CssClasses_.IS_DISABLED);\n    } else {\n      this.element_.classList.remove(this.CssClasses_.IS_DISABLED);\n    }\n  };\n  MaterialSwitch.prototype['checkDisabled'] = MaterialSwitch.prototype.checkDisabled;\n\n  /**\n   * Check the components toggled state.\n   *\n   * @public\n   */\n  MaterialSwitch.prototype.checkToggleState = function () {\n    if (this.inputElement_.checked) {\n      this.element_.classList.add(this.CssClasses_.IS_CHECKED);\n    } else {\n      this.element_.classList.remove(this.CssClasses_.IS_CHECKED);\n    }\n  };\n  MaterialSwitch.prototype['checkToggleState'] = MaterialSwitch.prototype.checkToggleState;\n\n  /**\n   * Disable switch.\n   *\n   * @public\n   */\n  MaterialSwitch.prototype.disable = function () {\n    this.inputElement_.disabled = true;\n    this.updateClasses_();\n  };\n  MaterialSwitch.prototype['disable'] = MaterialSwitch.prototype.disable;\n\n  /**\n   * Enable switch.\n   *\n   * @public\n   */\n  MaterialSwitch.prototype.enable = function () {\n    this.inputElement_.disabled = false;\n    this.updateClasses_();\n  };\n  MaterialSwitch.prototype['enable'] = MaterialSwitch.prototype.enable;\n\n  /**\n   * Activate switch.\n   *\n   * @public\n   */\n  MaterialSwitch.prototype.on = function () {\n    this.inputElement_.checked = true;\n    this.updateClasses_();\n  };\n  MaterialSwitch.prototype['on'] = MaterialSwitch.prototype.on;\n\n  /**\n   * Deactivate switch.\n   *\n   * @public\n   */\n  MaterialSwitch.prototype.off = function () {\n    this.inputElement_.checked = false;\n    this.updateClasses_();\n  };\n  MaterialSwitch.prototype['off'] = MaterialSwitch.prototype.off;\n\n  /**\n   * Initialize element.\n   */\n  MaterialSwitch.prototype.init = function () {\n    if (this.element_) {\n      this.inputElement_ = this.element_.querySelector('.' + this.CssClasses_.INPUT);\n\n      var track = document.createElement('div');\n      track.classList.add(this.CssClasses_.TRACK);\n\n      var thumb = document.createElement('div');\n      thumb.classList.add(this.CssClasses_.THUMB);\n\n      var focusHelper = document.createElement('span');\n      focusHelper.classList.add(this.CssClasses_.FOCUS_HELPER);\n\n      thumb.appendChild(focusHelper);\n\n      this.element_.appendChild(track);\n      this.element_.appendChild(thumb);\n\n      this.boundMouseUpHandler = this.onMouseUp_.bind(this);\n\n      if (this.element_.classList.contains(this.CssClasses_.RIPPLE_EFFECT)) {\n        this.element_.classList.add(this.CssClasses_.RIPPLE_IGNORE_EVENTS);\n        this.rippleContainerElement_ = document.createElement('span');\n        this.rippleContainerElement_.classList.add(this.CssClasses_.RIPPLE_CONTAINER);\n        this.rippleContainerElement_.classList.add(this.CssClasses_.RIPPLE_EFFECT);\n        this.rippleContainerElement_.classList.add(this.CssClasses_.RIPPLE_CENTER);\n        this.rippleContainerElement_.addEventListener('mouseup', this.boundMouseUpHandler);\n\n        var ripple = document.createElement('span');\n        ripple.classList.add(this.CssClasses_.RIPPLE);\n\n        this.rippleContainerElement_.appendChild(ripple);\n        this.element_.appendChild(this.rippleContainerElement_);\n      }\n\n      this.boundChangeHandler = this.onChange_.bind(this);\n      this.boundFocusHandler = this.onFocus_.bind(this);\n      this.boundBlurHandler = this.onBlur_.bind(this);\n\n      this.inputElement_.addEventListener('change', this.boundChangeHandler);\n      this.inputElement_.addEventListener('focus', this.boundFocusHandler);\n      this.inputElement_.addEventListener('blur', this.boundBlurHandler);\n      this.element_.addEventListener('mouseup', this.boundMouseUpHandler);\n\n      this.updateClasses_();\n      this.element_.classList.add('is-upgraded');\n    }\n  };\n\n  // The component registers itself. It can assume componentHandler is available\n  // in the global scope.\n  componentHandler.register({\n    constructor: MaterialSwitch,\n    classAsString: 'MaterialSwitch',\n    cssClass: 'mdl-js-switch',\n    widget: true\n  });\n})();","'use strict';\n\n/**\r\n * @license\r\n * Copyright 2015 Google Inc. All Rights Reserved.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *      http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n(function () {\n  'use strict';\n\n  /**\r\n   * Class constructor for Button MDL component.\r\n   * Implements MDL component design pattern defined at:\r\n   * https://github.com/jasonmayes/mdl-component-design-pattern\r\n   *\r\n   * @param {HTMLElement} element The element that will be upgraded.\r\n   */\n\n  var MaterialButton = function MaterialButton(element) {\n    this.element_ = element;\n\n    // Initialize instance.\n    this.init();\n  };\n  window['MaterialButton'] = MaterialButton;\n\n  /**\r\n   * Store constants in one place so they can be updated easily.\r\n   *\r\n   * @enum {string | number}\r\n   * @private\r\n   */\n  MaterialButton.prototype.Constant_ = {\n    // None for now.\n  };\n\n  /**\r\n   * Store strings for class names defined by this component that are used in\r\n   * JavaScript. This allows us to simply change it in one place should we\r\n   * decide to modify at a later date.\r\n   *\r\n   * @enum {string}\r\n   * @private\r\n   */\n  MaterialButton.prototype.CssClasses_ = {\n    RIPPLE_EFFECT: 'mdl-js-ripple-effect',\n    RIPPLE_CONTAINER: 'mdl-button__ripple-container',\n    RIPPLE: 'mdl-ripple'\n  };\n\n  /**\r\n   * Handle blur of element.\r\n   *\r\n   * @param {Event} event The event that fired.\r\n   * @private\r\n   */\n  MaterialButton.prototype.blurHandler_ = function (event) {\n    if (event) {\n      this.element_.blur();\n    }\n  };\n\n  // Public methods.\n\n  /**\r\n   * Disable button.\r\n   *\r\n   * @public\r\n   */\n  MaterialButton.prototype.disable = function () {\n    this.element_.disabled = true;\n  };\n  MaterialButton.prototype['disable'] = MaterialButton.prototype.disable;\n\n  /**\r\n   * Enable button.\r\n   *\r\n   * @public\r\n   */\n  MaterialButton.prototype.enable = function () {\n    this.element_.disabled = false;\n  };\n  MaterialButton.prototype['enable'] = MaterialButton.prototype.enable;\n\n  /**\r\n   * Initialize element.\r\n   */\n  MaterialButton.prototype.init = function () {\n    if (this.element_) {\n      if (this.element_.classList.contains(this.CssClasses_.RIPPLE_EFFECT)) {\n        var rippleContainer = document.createElement('span');\n        rippleContainer.classList.add(this.CssClasses_.RIPPLE_CONTAINER);\n        this.rippleElement_ = document.createElement('span');\n        this.rippleElement_.classList.add(this.CssClasses_.RIPPLE);\n        rippleContainer.appendChild(this.rippleElement_);\n        this.boundRippleBlurHandler = this.blurHandler_.bind(this);\n        this.rippleElement_.addEventListener('mouseup', this.boundRippleBlurHandler);\n        this.element_.appendChild(rippleContainer);\n      }\n      this.boundButtonBlurHandler = this.blurHandler_.bind(this);\n      this.element_.addEventListener('mouseup', this.boundButtonBlurHandler);\n      this.element_.addEventListener('mouseleave', this.boundButtonBlurHandler);\n    }\n  };\n\n  // The component registers itself. It can assume componentHandler is available\n  // in the global scope.\n  componentHandler.register({\n    constructor: MaterialButton,\n    classAsString: 'MaterialButton',\n    cssClass: 'mdl-js-button',\n    widget: true\n  });\n})();","'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Popup = function () {\n\tfunction Popup() {\n\t\t_classCallCheck(this, Popup);\n\n\t\tthis.self = false;\n\t\tthis.background = true;\n\t\tthis.bg_animation = true;\n\t\tthis.touch = true;\n\t\tthis.lang = 'en';\n\t\tthis.search_engine = 'google';\n\t\tthis.keys = ['Control', 'Enter'];\n\t\tthis.shortcuts = ['f:facebook.com'];\n\t\tthis.exclude_urls = ['linkedin.com'];\n\t}\n\n\t_createClass(Popup, [{\n\t\tkey: 'rewriteProps',\n\t\tvalue: function rewriteProps(o1, o2) {\n\t\t\tfor (var prop in o2) {\n\t\t\t\tvar val = o2[prop];\n\n\t\t\t\tif ((typeof val === 'undefined' ? 'undefined' : _typeof(val)) === \"object\" && !(val instanceof Array)) {\n\t\t\t\t\tvar o3 = val;\n\t\t\t\t\tfor (var prop1 in o3) {\n\t\t\t\t\t\to1[prop][prop1] = o3[prop1];\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\to1[prop] = val;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn o1;\n\t\t}\n\t}, {\n\t\tkey: 'changeViewSettings',\n\t\tvalue: function changeViewSettings() {\n\n\t\t\tvar selectOption = function selectOption(elem, val) {\n\t\t\t\tfor (var i = 0; i < elem.options.length; i++) {\n\t\t\t\t\tif (elem.options[i].value === val) elem.selectedIndex = i;\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tfor (var prop in this) {\n\t\t\t\tvar val = this[prop];\n\n\t\t\t\tif ((typeof val === 'undefined' ? 'undefined' : _typeof(val)) === \"object\" && !(val instanceof Array)) {\n\t\t\t\t\t// object\n\t\t\t\t} else if ((typeof val === 'undefined' ? 'undefined' : _typeof(val)) === \"object\" && val instanceof Array) {\n\t\t\t\t\t// array\n\t\t\t\t\tif (prop === 'keys') {\n\t\t\t\t\t\tvar elem1 = document.getElementById(prop + '_one');\n\t\t\t\t\t\tvar elem2 = document.getElementById(prop + '_two');\n\t\t\t\t\t\tif (elem1 && elem2) {\n\t\t\t\t\t\t\tselectOption(elem1, val[0]);\n\t\t\t\t\t\t\tselectOption(elem2, val[1]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else if (typeof val === \"string\") {\n\t\t\t\t\tvar elem = document.getElementById(prop);\n\t\t\t\t\tif (elem) selectOption(elem, val);\n\t\t\t\t} else {\n\t\t\t\t\t// boolean\n\t\t\t\t\tvar _elem = document.getElementById(prop);\n\t\t\t\t\tif (_elem) {\n\t\t\t\t\t\t_elem.value = val;\n\t\t\t\t\t\t_elem.parentNode.MaterialSwitch[this[prop] ? 'on' : 'off']();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn true;\n\t\t}\n\t}, {\n\t\tkey: 'testSettings',\n\t\tvalue: function testSettings() {\n\t\t\tdocument.getElementById('test_settings').disabled = false;\n\t\t}\n\n\t\t// save prop in object or storage\n\n\t}, {\n\t\tkey: 'saveSearchProps',\n\t\tvalue: function saveSearchProps(changed) {\n\t\t\tvar _this = this;\n\n\t\t\treturn new Promise(function (resolve, reject) {\n\t\t\t\tchrome.storage.local.get('search_props_', function (items) {\n\t\t\t\t\tvar storage_obj = items.search_props_ ? JSON.parse(items.search_props_) : null;\n\t\t\t\t\tif (changed) {\n\t\t\t\t\t\t// console.log(this.exclude_urls);\n\t\t\t\t\t\tstorage_obj = _this.rewriteProps(storage_obj, _this);\n\t\t\t\t\t\tchrome.storage.local.set({ 'search_props_': JSON.stringify(storage_obj) });\n\t\t\t\t\t\t_this.testSettings();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!Object.keys(items).length) {\n\t\t\t\t\t\tchrome.storage.local.set({ 'search_props_': JSON.stringify(_this) });\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (_this.rewriteProps(_this, storage_obj)) {\n\t\t\t\t\t\t\tif (_this.changeViewSettings()) resolve();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\t}, {\n\t\tkey: 'buildOptions',\n\t\tvalue: function buildOptions(prop) {\n\t\t\tvar _this2 = this;\n\n\t\t\tif (this.removeOptions(prop, true)) {\n\t\t\t\tvar addOptions = function addOptions(prop) {\n\t\t\t\t\tvar select = document.getElementById(prop);\n\t\t\t\t\tif (!select) return false;\n\t\t\t\t\tfor (var i = 0; i < _this2[prop].length; i++) {\n\t\t\t\t\t\tvar option = document.createElement('option');\n\t\t\t\t\t\toption.value = _this2[prop][i];\n\t\t\t\t\t\toption.textContent = _this2[prop][i];\n\t\t\t\t\t\tselect.appendChild(option);\n\t\t\t\t\t}\n\t\t\t\t\treturn true;\n\t\t\t\t};\n\t\t\t\treturn addOptions(prop);\n\t\t\t}\n\t\t}\n\t}, {\n\t\tkey: 'removeOptions',\n\t\tvalue: function removeOptions(prop, all) {\n\t\t\tvar select = document.getElementById(prop);\n\t\t\tif (!select) return false;\n\t\t\tif (all) {\n\t\t\t\twhile (select.firstElementChild) {\n\t\t\t\t\tselect.removeChild(select.firstElementChild);\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tif (select.options.length) {\n\t\t\t\tvar selected = select.options.selectedIndex;\n\t\t\t\tvar val = select.options[selected].value;\n\t\t\t\tvar indx = this[prop].indexOf(val);\n\t\t\t\tif (~indx) {\n\t\t\t\t\tthis[prop].splice(indx, 1);\n\t\t\t\t} else {\n\t\t\t\t\treturn new Error('Don\\'t find element in array ' + prop);\n\t\t\t\t}\n\t\t\t\tselect.removeChild(select.options[selected]);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t}, {\n\t\tkey: 'blurValidate',\n\t\tvalue: function blurValidate() {\n\t\t\tvar is_invalid = 'is-invalid';\n\t\t\tvar re1 = /^(?!(http|www\\.)).+\\..+$/; // sitename.com\n\t\t\tvar re2 = /^.+:.+\\..+$/; // abc:sitename.com\n\t\t\tvar validate = function validate(re, selector) {\n\t\t\t\tdocument.getElementById(selector).addEventListener('blur', function (e) {\n\t\t\t\t\te.target.parentNode.classList[!re.test(e.target.value) ? 'add' : 'remove'](is_invalid);\n\t\t\t\t});\n\t\t\t};\n\t\t\tvalidate(re1, 'exclude');\n\t\t\tvalidate(re2, 'shortcut_inp');\n\t\t}\n\t}, {\n\t\tkey: 'approveInputData',\n\t\tvalue: function approveInputData(input, select) {\n\t\t\tvar elem = document.getElementById(input);\n\t\t\tif (elem.value) {\n\t\t\t\tif (this[select].indexOf(elem.value) === -1) this[select].push(elem.value);\n\t\t\t\tif (this.buildOptions(select)) {\n\t\t\t\t\tthis.saveSearchProps(true);\n\t\t\t\t}\n\t\t\t\telem.value = \"\";\n\t\t\t}\n\t\t}\n\t}, {\n\t\tkey: 'docEvents',\n\t\tvalue: function docEvents() {\n\t\t\tvar _this3 = this;\n\n\t\t\tdocument.addEventListener('change', function (e) {\n\t\t\t\tvar target = e.target;\n\n\t\t\t\tswitch (target.tagName.toLowerCase()) {\n\t\t\t\t\tcase 'input':\n\t\t\t\t\t\t// checkboxes\n\t\t\t\t\t\tif (target.type === \"checkbox\") {\n\t\t\t\t\t\t\t_this3[target.id] = !!target.checked;\n\t\t\t\t\t\t\t_this3.saveSearchProps(true);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\t// selects\n\t\t\t\t\t\tif (/^keys_/.test(target.id)) {\n\t\t\t\t\t\t\t_this3.keys[0] = document.getElementById('keys_one').value;\n\t\t\t\t\t\t\t_this3.keys[1] = document.getElementById('keys_two').value;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (target.id === 'search_engine') {\n\t\t\t\t\t\t\t_this3.search_engine = target.value;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t_this3.saveSearchProps(true);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tdocument.addEventListener('click', function (e) {\n\n\t\t\t\tvar target = e.target;\n\n\t\t\t\twhile (!target.id) {\n\t\t\t\t\tif (target.tagName === 'HTML') return;\n\t\t\t\t\ttarget = target.parentNode;\n\t\t\t\t}\n\n\t\t\t\t// const target = e.target.id ? e.target : e.target.parentNode;\n\n\t\t\t\tswitch (target.id) {\n\t\t\t\t\tcase 'test_settings':\n\t\t\t\t\t\tif (!target.disabled) window.open('https://google.com', '_blank');\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'exclude_approve':\n\t\t\t\t\t\t_this3.approveInputData('exclude', 'exclude_urls');\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'remove_exclude':\n\t\t\t\t\t\tif (_this3.removeOptions('exclude_urls')) _this3.saveSearchProps(true);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'shortcut_approve':\n\t\t\t\t\t\t_this3.approveInputData('shortcut_inp', 'shortcuts');\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'remove_shortcut':\n\t\t\t\t\t\tif (_this3.removeOptions('shortcuts')) _this3.saveSearchProps(true);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'en':\n\t\t\t\t\tcase 'ru':\n\t\t\t\t\t\t_this3.switchLang(target.value);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'btn_support':\n\t\t\t\t\t\twindow.open(chrome.extension.getURL('donate.html'));\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'help':\n\t\t\t\t\t\t_this3.toggleHelp();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'help_close':\n\t\t\t\t\t\t_this3.toggleHelp();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}, {\n\t\tkey: 'toggleHelp',\n\t\tvalue: function toggleHelp() {\n\t\t\tdocument.querySelector('.help').classList.toggle('is-hidden');\n\t\t}\n\t}, {\n\t\tkey: 'switchLang',\n\t\tvalue: function switchLang(lang) {\n\t\t\tvar elems = document.querySelectorAll('*[data-lang]');\n\t\t\tif (!elems.length) return false;\n\n\t\t\tthis.lang = lang;\n\t\t\tchrome.storage.local.set({ 'search_props_': JSON.stringify(this) });\n\n\t\t\t[].concat(_toConsumableArray(elems)).forEach(function (el, indx) {\n\t\t\t\tvar o = JSON.parse(el.dataset.lang);\n\t\t\t\tel.innerHTML = o[lang];\n\t\t\t});\n\n\t\t\treturn true;\n\t\t}\n\t}, {\n\t\tkey: 'setLangOnload',\n\t\tvalue: function setLangOnload() {\n\t\t\tdocument.getElementById(this.lang).click();\n\t\t}\n\t}, {\n\t\tkey: 'getCurrentTabUrl',\n\t\tvalue: function getCurrentTabUrl() {\n\n\t\t\tvar queryInfo = {\n\t\t\t\tactive: true,\n\t\t\t\tcurrentWindow: true\n\t\t\t};\n\n\t\t\tchrome.tabs.query(queryInfo, function (tabs) {\n\t\t\t\tvar tab = tabs[0];\n\t\t\t\tvar url = tab.url;\n\n\t\t\t\tconsole.assert(typeof url == 'string', 'tab.url should be a string');\n\t\t\t\t// console.log(url);\n\t\t\t});\n\t\t}\n\t}, {\n\t\tkey: 'messageReceivingEnd',\n\t\tvalue: function messageReceivingEnd() {\n\t\t\t// chrome.tabs.query({active: true, currentWindow: true}, function(tabs) {\n\t\t\t//   chrome.tabs.sendMessage(tabs[0].id, {obj: chrome.tabs}, function(response) {\n\t\t\t//     console.log(response.farewell);\n\t\t\t//   });\n\t\t\t// });\n\t\t}\n\t}, {\n\t\tkey: 'storageClear',\n\t\tvalue: function storageClear() {\n\t\t\tchrome.storage.local.clear();\n\t\t}\n\t}]);\n\n\treturn Popup;\n}();\n\nvar popup = new Popup();\npopup.messageReceivingEnd();\nsetTimeout(function () {\n\tpopup.saveSearchProps().then(function (result) {\n\t\tpopup.setLangOnload();\n\t\tpopup.buildOptions('exclude_urls');\n\t\tpopup.buildOptions('shortcuts');\n\t}, function (error) {\n\t\treturn console.log(error.message);\n\t});\n\tpopup.blurValidate();\n\tpopup.docEvents();\n\t// popup.storageClear();\n}, 10);","'use strict';\n\n/**\r\n * @license\r\n * Copyright 2015 Google Inc. All Rights Reserved.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *      http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n(function () {\n  'use strict';\n\n  /**\r\n   * Class constructor for Radio MDL component.\r\n   * Implements MDL component design pattern defined at:\r\n   * https://github.com/jasonmayes/mdl-component-design-pattern\r\n   *\r\n   * @constructor\r\n   * @param {HTMLElement} element The element that will be upgraded.\r\n   */\n\n  var MaterialRadio = function MaterialRadio(element) {\n    this.element_ = element;\n\n    // Initialize instance.\n    this.init();\n  };\n  window['MaterialRadio'] = MaterialRadio;\n\n  /**\r\n   * Store constants in one place so they can be updated easily.\r\n   *\r\n   * @enum {string | number}\r\n   * @private\r\n   */\n  MaterialRadio.prototype.Constant_ = {\n    TINY_TIMEOUT: 0.001\n  };\n\n  /**\r\n   * Store strings for class names defined by this component that are used in\r\n   * JavaScript. This allows us to simply change it in one place should we\r\n   * decide to modify at a later date.\r\n   *\r\n   * @enum {string}\r\n   * @private\r\n   */\n  MaterialRadio.prototype.CssClasses_ = {\n    IS_FOCUSED: 'is-focused',\n    IS_DISABLED: 'is-disabled',\n    IS_CHECKED: 'is-checked',\n    IS_UPGRADED: 'is-upgraded',\n    JS_RADIO: 'mdl-js-radio',\n    RADIO_BTN: 'mdl-radio__button',\n    RADIO_OUTER_CIRCLE: 'mdl-radio__outer-circle',\n    RADIO_INNER_CIRCLE: 'mdl-radio__inner-circle',\n    RIPPLE_EFFECT: 'mdl-js-ripple-effect',\n    RIPPLE_IGNORE_EVENTS: 'mdl-js-ripple-effect--ignore-events',\n    RIPPLE_CONTAINER: 'mdl-radio__ripple-container',\n    RIPPLE_CENTER: 'mdl-ripple--center',\n    RIPPLE: 'mdl-ripple'\n  };\n\n  /**\r\n   * Handle change of state.\r\n   *\r\n   * @param {Event} event The event that fired.\r\n   * @private\r\n   */\n  MaterialRadio.prototype.onChange_ = function (event) {\n    // Since other radio buttons don't get change events, we need to look for\n    // them to update their classes.\n    var radios = document.getElementsByClassName(this.CssClasses_.JS_RADIO);\n    for (var i = 0; i < radios.length; i++) {\n      var button = radios[i].querySelector('.' + this.CssClasses_.RADIO_BTN);\n      // Different name == different group, so no point updating those.\n      if (button.getAttribute('name') === this.btnElement_.getAttribute('name')) {\n        if (typeof radios[i]['MaterialRadio'] !== 'undefined') {\n          radios[i]['MaterialRadio'].updateClasses_();\n        }\n      }\n    }\n  };\n\n  /**\r\n   * Handle focus.\r\n   *\r\n   * @param {Event} event The event that fired.\r\n   * @private\r\n   */\n  MaterialRadio.prototype.onFocus_ = function (event) {\n    this.element_.classList.add(this.CssClasses_.IS_FOCUSED);\n  };\n\n  /**\r\n   * Handle lost focus.\r\n   *\r\n   * @param {Event} event The event that fired.\r\n   * @private\r\n   */\n  MaterialRadio.prototype.onBlur_ = function (event) {\n    this.element_.classList.remove(this.CssClasses_.IS_FOCUSED);\n  };\n\n  /**\r\n   * Handle mouseup.\r\n   *\r\n   * @param {Event} event The event that fired.\r\n   * @private\r\n   */\n  MaterialRadio.prototype.onMouseup_ = function (event) {\n    this.blur_();\n  };\n\n  /**\r\n   * Update classes.\r\n   *\r\n   * @private\r\n   */\n  MaterialRadio.prototype.updateClasses_ = function () {\n    this.checkDisabled();\n    this.checkToggleState();\n  };\n\n  /**\r\n   * Add blur.\r\n   *\r\n   * @private\r\n   */\n  MaterialRadio.prototype.blur_ = function () {\n\n    // TODO: figure out why there's a focus event being fired after our blur,\n    // so that we can avoid this hack.\n    window.setTimeout(function () {\n      this.btnElement_.blur();\n    }.bind(this), /** @type {number} */this.Constant_.TINY_TIMEOUT);\n  };\n\n  // Public methods.\n\n  /**\r\n   * Check the components disabled state.\r\n   *\r\n   * @public\r\n   */\n  MaterialRadio.prototype.checkDisabled = function () {\n    if (this.btnElement_.disabled) {\n      this.element_.classList.add(this.CssClasses_.IS_DISABLED);\n    } else {\n      this.element_.classList.remove(this.CssClasses_.IS_DISABLED);\n    }\n  };\n  MaterialRadio.prototype['checkDisabled'] = MaterialRadio.prototype.checkDisabled;\n\n  /**\r\n   * Check the components toggled state.\r\n   *\r\n   * @public\r\n   */\n  MaterialRadio.prototype.checkToggleState = function () {\n    if (this.btnElement_.checked) {\n      this.element_.classList.add(this.CssClasses_.IS_CHECKED);\n    } else {\n      this.element_.classList.remove(this.CssClasses_.IS_CHECKED);\n    }\n  };\n  MaterialRadio.prototype['checkToggleState'] = MaterialRadio.prototype.checkToggleState;\n\n  /**\r\n   * Disable radio.\r\n   *\r\n   * @public\r\n   */\n  MaterialRadio.prototype.disable = function () {\n    this.btnElement_.disabled = true;\n    this.updateClasses_();\n  };\n  MaterialRadio.prototype['disable'] = MaterialRadio.prototype.disable;\n\n  /**\r\n   * Enable radio.\r\n   *\r\n   * @public\r\n   */\n  MaterialRadio.prototype.enable = function () {\n    this.btnElement_.disabled = false;\n    this.updateClasses_();\n  };\n  MaterialRadio.prototype['enable'] = MaterialRadio.prototype.enable;\n\n  /**\r\n   * Check radio.\r\n   *\r\n   * @public\r\n   */\n  MaterialRadio.prototype.check = function () {\n    this.btnElement_.checked = true;\n    this.onChange_(null);\n  };\n  MaterialRadio.prototype['check'] = MaterialRadio.prototype.check;\n\n  /**\r\n   * Uncheck radio.\r\n   *\r\n   * @public\r\n   */\n  MaterialRadio.prototype.uncheck = function () {\n    this.btnElement_.checked = false;\n    this.onChange_(null);\n  };\n  MaterialRadio.prototype['uncheck'] = MaterialRadio.prototype.uncheck;\n\n  /**\r\n   * Initialize element.\r\n   */\n  MaterialRadio.prototype.init = function () {\n    if (this.element_) {\n      this.btnElement_ = this.element_.querySelector('.' + this.CssClasses_.RADIO_BTN);\n\n      this.boundChangeHandler_ = this.onChange_.bind(this);\n      this.boundFocusHandler_ = this.onChange_.bind(this);\n      this.boundBlurHandler_ = this.onBlur_.bind(this);\n      this.boundMouseUpHandler_ = this.onMouseup_.bind(this);\n\n      var outerCircle = document.createElement('span');\n      outerCircle.classList.add(this.CssClasses_.RADIO_OUTER_CIRCLE);\n\n      var innerCircle = document.createElement('span');\n      innerCircle.classList.add(this.CssClasses_.RADIO_INNER_CIRCLE);\n\n      this.element_.appendChild(outerCircle);\n      this.element_.appendChild(innerCircle);\n\n      var rippleContainer;\n      if (this.element_.classList.contains(this.CssClasses_.RIPPLE_EFFECT)) {\n        this.element_.classList.add(this.CssClasses_.RIPPLE_IGNORE_EVENTS);\n        rippleContainer = document.createElement('span');\n        rippleContainer.classList.add(this.CssClasses_.RIPPLE_CONTAINER);\n        rippleContainer.classList.add(this.CssClasses_.RIPPLE_EFFECT);\n        rippleContainer.classList.add(this.CssClasses_.RIPPLE_CENTER);\n        rippleContainer.addEventListener('mouseup', this.boundMouseUpHandler_);\n\n        var ripple = document.createElement('span');\n        ripple.classList.add(this.CssClasses_.RIPPLE);\n\n        rippleContainer.appendChild(ripple);\n        this.element_.appendChild(rippleContainer);\n      }\n\n      this.btnElement_.addEventListener('change', this.boundChangeHandler_);\n      this.btnElement_.addEventListener('focus', this.boundFocusHandler_);\n      this.btnElement_.addEventListener('blur', this.boundBlurHandler_);\n      this.element_.addEventListener('mouseup', this.boundMouseUpHandler_);\n\n      this.updateClasses_();\n      this.element_.classList.add(this.CssClasses_.IS_UPGRADED);\n    }\n  };\n\n  // The component registers itself. It can assume componentHandler is available\n  // in the global scope.\n  componentHandler.register({\n    constructor: MaterialRadio,\n    classAsString: 'MaterialRadio',\n    cssClass: 'mdl-js-radio',\n    widget: true\n  });\n})();","'use strict';\n\n(function () {\n  'use strict';\n\n  /**\r\n   * Class constructor for Select field MDL component.\r\n   * Implements custom MDL component design pattern not defined yet.\r\n   *\r\n   * @constructor\r\n   * @param {HTMLElement} element The element that will be upgraded.\r\n   */\n\n  var MaterialSelectfield = function MaterialSelectfield(element) {\n    this.element_ = element;\n    // Initialize instance.\n    this.init();\n  };\n  window['MaterialSelectfield'] = MaterialSelectfield;\n\n  MaterialSelectfield.prototype.Constant_ = {\n    // None for now\n  };\n\n  MaterialSelectfield.prototype.CssClasses_ = {\n    LABEL: 'mdl-selectfield__label',\n    SELECT: 'mdl-selectfield__select',\n    IS_DIRTY: 'is-dirty',\n    IS_FOCUSED: 'is-focused',\n    IS_DISABLED: 'is-disabled',\n    IS_INVALID: 'is-invalid',\n    IS_UPGRADED: 'is-upgraded'\n  };\n\n  /**\r\n   * Handle focus.\r\n   *\r\n   * @param {Event} event The event that fired.\r\n   * @private\r\n   */\n  MaterialSelectfield.prototype.onFocus_ = function (event) {\n    this.element_.classList.add(this.CssClasses_.IS_FOCUSED);\n  };\n\n  /**\r\n   * Handle lost focus.\r\n   *\r\n   * @param {Event} event The event that fired.\r\n   * @private\r\n   */\n  MaterialSelectfield.prototype.onBlur_ = function (event) {\n    this.element_.classList.remove(this.CssClasses_.IS_FOCUSED);\n  };\n\n  /**\r\n   * Handle reset event from outside.\r\n   *\r\n   * @param {Event} event The event that fired.\r\n   * @private\r\n   */\n  MaterialSelectfield.prototype.onReset_ = function (event) {\n    this.updateClasses_();\n  };\n\n  /**\r\n   * Handle class updates.\r\n   *\r\n   * @private\r\n   */\n  MaterialSelectfield.prototype.updateClasses_ = function () {\n    this.checkDisabled();\n    this.checkValidity();\n    this.checkDirty();\n  };\n\n  // Public methods.\n\n  /**\r\n   * Check the disabled state and update field accordingly.\r\n   *\r\n   * @public\r\n   */\n  MaterialSelectfield.prototype.checkDisabled = function () {\n    if (this.select_.disabled) {\n      this.element_.classList.add(this.CssClasses_.IS_DISABLED);\n    } else {\n      this.element_.classList.remove(this.CssClasses_.IS_DISABLED);\n    }\n  };\n  MaterialSelectfield.prototype['checkDisabled'] = MaterialSelectfield.prototype.checkDisabled;\n\n  /**\r\n   * Check the validity state and update field accordingly.\r\n   *\r\n   * @public\r\n   */\n  MaterialSelectfield.prototype.checkValidity = function () {\n    if (this.select_.validity.valid) {\n      this.element_.classList.remove(this.CssClasses_.IS_INVALID);\n    } else {\n      this.element_.classList.add(this.CssClasses_.IS_INVALID);\n    }\n  };\n  MaterialSelectfield.prototype['checkValidity'] = MaterialSelectfield.prototype.checkValidity;\n\n  /**\r\n   * Check the dirty state and update field accordingly.\r\n   *\r\n   * @public\r\n   */\n  MaterialSelectfield.prototype.checkDirty = function () {\n    if (this.select_.value && this.select_.value.length > 0) {\n      this.element_.classList.add(this.CssClasses_.IS_DIRTY);\n    } else {\n      this.element_.classList.remove(this.CssClasses_.IS_DIRTY);\n    }\n  };\n  MaterialSelectfield.prototype['checkDirty'] = MaterialSelectfield.prototype.checkDirty;\n\n  /**\r\n   * Enable select field.\r\n   *\r\n   * @public\r\n   */\n  MaterialSelectfield.prototype.disable = function () {\n    this.select_.disabled = true;\n    this.updateClasses_();\n  };\n  MaterialSelectfield.prototype['disable'] = MaterialSelectfield.prototype.disable;\n\n  /**\r\n   * Enable select field.\r\n   *\r\n   * @public\r\n   */\n  MaterialSelectfield.prototype.enable = function () {\n    this.select_.disabled = false;\n    this.updateClasses_();\n  };\n  MaterialSelectfield.prototype['enable'] = MaterialSelectfield.prototype.enable;\n\n  /**\r\n   * Update select field value.\r\n   *\r\n   * @param {string} value The value to which to set the control (optional).\r\n   * @public\r\n   */\n  MaterialSelectfield.prototype.change = function (value) {\n    if (value) {\n      this.select_.value = value;\n    }\n    this.updateClasses_();\n  };\n  MaterialSelectfield.prototype['change'] = MaterialSelectfield.prototype.change;\n\n  /**\r\n   * Initialize element.\r\n   */\n  MaterialSelectfield.prototype.init = function () {\n    if (this.element_) {\n      this.label_ = this.element_.querySelector('.' + this.CssClasses_.LABEL);\n      this.select_ = this.element_.querySelector('.' + this.CssClasses_.SELECT);\n\n      if (this.select_) {\n        this.boundUpdateClassesHandler = this.updateClasses_.bind(this);\n        this.boundFocusHandler = this.onFocus_.bind(this);\n        this.boundBlurHandler = this.onBlur_.bind(this);\n        this.boundResetHandler = this.onReset_.bind(this);\n        this.select_.addEventListener('change', this.boundUpdateClassesHandler);\n        this.select_.addEventListener('focus', this.boundFocusHandler);\n        this.select_.addEventListener('blur', this.boundBlurHandler);\n        this.select_.addEventListener('reset', this.boundResetHandler);\n\n        var invalid = this.element_.classList.contains(this.CssClasses_.IS_INVALID);\n        this.updateClasses_();\n        this.element_.classList.add(this.CssClasses_.IS_UPGRADED);\n        if (invalid) {\n          this.element_.classList.add(this.CssClasses_.IS_INVALID);\n        }\n      }\n    }\n  };\n\n  /**\r\n   * Downgrade the component\r\n   *\r\n   * @private\r\n   */\n  MaterialSelectfield.prototype.mdlDowngrade_ = function () {\n    this.select_.removeEventListener('change', this.boundUpdateClassesHandler);\n    this.select_.removeEventListener('focus', this.boundFocusHandler);\n    this.select_.removeEventListener('blur', this.boundBlurHandler);\n    this.select_.removeEventListener('reset', this.boundResetHandler);\n  };\n\n  // The component registers itself. It can assume componentHandler is available\n  // in the global scope.\n  componentHandler.register({\n    constructor: MaterialSelectfield,\n    classAsString: 'MaterialSelectfield',\n    cssClass: 'mdl-js-selectfield',\n    widget: true\n  });\n})();","'use strict';\n\n/**\r\n * Copyright 2015 Google Inc. All Rights Reserved.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *      http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n(function () {\n  'use strict';\n\n  /**\r\n   * Class constructor for Snackbar MDL component.\r\n   * Implements MDL component design pattern defined at:\r\n   * https://github.com/jasonmayes/mdl-component-design-pattern\r\n   *\r\n   * @constructor\r\n   * @param {HTMLElement} element The element that will be upgraded.\r\n   */\n\n  var MaterialSnackbar = function MaterialSnackbar(element) {\n    this.element_ = element;\n    this.textElement_ = this.element_.querySelector('.' + this.cssClasses_.MESSAGE);\n    this.actionElement_ = this.element_.querySelector('.' + this.cssClasses_.ACTION);\n    if (!this.textElement_) {\n      throw new Error('There must be a message element for a snackbar.');\n    }\n    if (!this.actionElement_) {\n      throw new Error('There must be an action element for a snackbar.');\n    }\n    this.active = false;\n    this.actionHandler_ = undefined;\n    this.message_ = undefined;\n    this.actionText_ = undefined;\n    this.queuedNotifications_ = [];\n    this.setActionHidden_(true);\n  };\n  window['MaterialSnackbar'] = MaterialSnackbar;\n\n  /**\r\n   * Store constants in one place so they can be updated easily.\r\n   *\r\n   * @enum {string | number}\r\n   * @private\r\n   */\n  MaterialSnackbar.prototype.Constant_ = {\n    // The duration of the snackbar show/hide animation, in ms.\n    ANIMATION_LENGTH: 250\n  };\n\n  /**\r\n   * Store strings for class names defined by this component that are used in\r\n   * JavaScript. This allows us to simply change it in one place should we\r\n   * decide to modify at a later date.\r\n   *\r\n   * @enum {string}\r\n   * @private\r\n   */\n  MaterialSnackbar.prototype.cssClasses_ = {\n    SNACKBAR: 'mdl-snackbar',\n    MESSAGE: 'mdl-snackbar__text',\n    ACTION: 'mdl-snackbar__action',\n    ACTIVE: 'mdl-snackbar--active'\n  };\n\n  /**\r\n   * Display the snackbar.\r\n   *\r\n   * @private\r\n   */\n  MaterialSnackbar.prototype.displaySnackbar_ = function () {\n    this.element_.setAttribute('aria-hidden', 'true');\n\n    if (this.actionHandler_) {\n      this.actionElement_.textContent = this.actionText_;\n      this.actionElement_.addEventListener('click', this.actionHandler_);\n      this.setActionHidden_(false);\n    }\n\n    this.textElement_.textContent = this.message_;\n    this.element_.classList.add(this.cssClasses_.ACTIVE);\n    this.element_.setAttribute('aria-hidden', 'false');\n    setTimeout(this.cleanup_.bind(this), this.timeout_);\n  };\n\n  /**\r\n   * Show the snackbar.\r\n   *\r\n   * @param {Object} data The data for the notification.\r\n   * @public\r\n   */\n  MaterialSnackbar.prototype.showSnackbar = function (data) {\n    if (data === undefined) {\n      throw new Error('Please provide a data object with at least a message to display.');\n    }\n    if (data['message'] === undefined) {\n      throw new Error('Please provide a message to be displayed.');\n    }\n    if (data['actionHandler'] && !data['actionText']) {\n      throw new Error('Please provide action text with the handler.');\n    }\n    if (this.active) {\n      this.queuedNotifications_.push(data);\n    } else {\n      this.active = true;\n      this.message_ = data['message'];\n      if (data['timeout']) {\n        this.timeout_ = data['timeout'];\n      } else {\n        this.timeout_ = 2750;\n      }\n      if (data['actionHandler']) {\n        this.actionHandler_ = data['actionHandler'];\n      }\n      if (data['actionText']) {\n        this.actionText_ = data['actionText'];\n      }\n      this.displaySnackbar_();\n    }\n  };\n  MaterialSnackbar.prototype['showSnackbar'] = MaterialSnackbar.prototype.showSnackbar;\n\n  /**\r\n   * Check if the queue has items within it.\r\n   * If it does, display the next entry.\r\n   *\r\n   * @private\r\n   */\n  MaterialSnackbar.prototype.checkQueue_ = function () {\n    if (this.queuedNotifications_.length > 0) {\n      this.showSnackbar(this.queuedNotifications_.shift());\n    }\n  };\n\n  /**\r\n   * Cleanup the snackbar event listeners and accessiblity attributes.\r\n   *\r\n   * @private\r\n   */\n  MaterialSnackbar.prototype.cleanup_ = function () {\n    this.element_.classList.remove(this.cssClasses_.ACTIVE);\n    setTimeout(function () {\n      this.element_.setAttribute('aria-hidden', 'true');\n      this.textElement_.textContent = '';\n      if (!Boolean(this.actionElement_.getAttribute('aria-hidden'))) {\n        this.setActionHidden_(true);\n        this.actionElement_.textContent = '';\n        this.actionElement_.removeEventListener('click', this.actionHandler_);\n      }\n      this.actionHandler_ = undefined;\n      this.message_ = undefined;\n      this.actionText_ = undefined;\n      this.active = false;\n      this.checkQueue_();\n    }.bind(this), /** @type {number} */this.Constant_.ANIMATION_LENGTH);\n  };\n\n  /**\r\n   * Set the action handler hidden state.\r\n   *\r\n   * @param {boolean} value\r\n   * @private\r\n   */\n  MaterialSnackbar.prototype.setActionHidden_ = function (value) {\n    if (value) {\n      this.actionElement_.setAttribute('aria-hidden', 'true');\n    } else {\n      this.actionElement_.removeAttribute('aria-hidden');\n    }\n  };\n\n  // The component registers itself. It can assume componentHandler is available\n  // in the global scope.\n  componentHandler.register({\n    constructor: MaterialSnackbar,\n    classAsString: 'MaterialSnackbar',\n    cssClass: 'mdl-js-snackbar',\n    widget: true\n  });\n})();","'use strict';\n\n/**\n * @license\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n(function () {\n  'use strict';\n\n  /**\n   * Class constructor for Spinner MDL component.\n   * Implements MDL component design pattern defined at:\n   * https://github.com/jasonmayes/mdl-component-design-pattern\n   *\n   * @param {HTMLElement} element The element that will be upgraded.\n   * @constructor\n   */\n\n  var MaterialSpinner = function MaterialSpinner(element) {\n    this.element_ = element;\n\n    // Initialize instance.\n    this.init();\n  };\n  window['MaterialSpinner'] = MaterialSpinner;\n\n  /**\n   * Store constants in one place so they can be updated easily.\n   *\n   * @enum {string | number}\n   * @private\n   */\n  MaterialSpinner.prototype.Constant_ = {\n    MDL_SPINNER_LAYER_COUNT: 4\n  };\n\n  /**\n   * Store strings for class names defined by this component that are used in\n   * JavaScript. This allows us to simply change it in one place should we\n   * decide to modify at a later date.\n   *\n   * @enum {string}\n   * @private\n   */\n  MaterialSpinner.prototype.CssClasses_ = {\n    MDL_SPINNER_LAYER: 'mdl-spinner__layer',\n    MDL_SPINNER_CIRCLE_CLIPPER: 'mdl-spinner__circle-clipper',\n    MDL_SPINNER_CIRCLE: 'mdl-spinner__circle',\n    MDL_SPINNER_GAP_PATCH: 'mdl-spinner__gap-patch',\n    MDL_SPINNER_LEFT: 'mdl-spinner__left',\n    MDL_SPINNER_RIGHT: 'mdl-spinner__right'\n  };\n\n  /**\n   * Auxiliary method to create a spinner layer.\n   *\n   * @param {number} index Index of the layer to be created.\n   * @public\n   */\n  MaterialSpinner.prototype.createLayer = function (index) {\n    var layer = document.createElement('div');\n    layer.classList.add(this.CssClasses_.MDL_SPINNER_LAYER);\n    layer.classList.add(this.CssClasses_.MDL_SPINNER_LAYER + '-' + index);\n\n    var leftClipper = document.createElement('div');\n    leftClipper.classList.add(this.CssClasses_.MDL_SPINNER_CIRCLE_CLIPPER);\n    leftClipper.classList.add(this.CssClasses_.MDL_SPINNER_LEFT);\n\n    var gapPatch = document.createElement('div');\n    gapPatch.classList.add(this.CssClasses_.MDL_SPINNER_GAP_PATCH);\n\n    var rightClipper = document.createElement('div');\n    rightClipper.classList.add(this.CssClasses_.MDL_SPINNER_CIRCLE_CLIPPER);\n    rightClipper.classList.add(this.CssClasses_.MDL_SPINNER_RIGHT);\n\n    var circleOwners = [leftClipper, gapPatch, rightClipper];\n\n    for (var i = 0; i < circleOwners.length; i++) {\n      var circle = document.createElement('div');\n      circle.classList.add(this.CssClasses_.MDL_SPINNER_CIRCLE);\n      circleOwners[i].appendChild(circle);\n    }\n\n    layer.appendChild(leftClipper);\n    layer.appendChild(gapPatch);\n    layer.appendChild(rightClipper);\n\n    this.element_.appendChild(layer);\n  };\n  MaterialSpinner.prototype['createLayer'] = MaterialSpinner.prototype.createLayer;\n\n  /**\n   * Stops the spinner animation.\n   * Public method for users who need to stop the spinner for any reason.\n   *\n   * @public\n   */\n  MaterialSpinner.prototype.stop = function () {\n    this.element_.classList.remove('is-active');\n  };\n  MaterialSpinner.prototype['stop'] = MaterialSpinner.prototype.stop;\n\n  /**\n   * Starts the spinner animation.\n   * Public method for users who need to manually start the spinner for any reason\n   * (instead of just adding the 'is-active' class to their markup).\n   *\n   * @public\n   */\n  MaterialSpinner.prototype.start = function () {\n    this.element_.classList.add('is-active');\n  };\n  MaterialSpinner.prototype['start'] = MaterialSpinner.prototype.start;\n\n  /**\n   * Initialize element.\n   */\n  MaterialSpinner.prototype.init = function () {\n    if (this.element_) {\n      for (var i = 1; i <= this.Constant_.MDL_SPINNER_LAYER_COUNT; i++) {\n        this.createLayer(i);\n      }\n\n      this.element_.classList.add('is-upgraded');\n    }\n  };\n\n  // The component registers itself. It can assume componentHandler is available\n  // in the global scope.\n  componentHandler.register({\n    constructor: MaterialSpinner,\n    classAsString: 'MaterialSpinner',\n    cssClass: 'mdl-js-spinner',\n    widget: true\n  });\n})();","'use strict';\n\n/**\r\n * @license\r\n * Copyright 2015 Google Inc. All Rights Reserved.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *      http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n(function () {\n  'use strict';\n\n  /**\r\n   * Class constructor for Textfield MDL component.\r\n   * Implements MDL component design pattern defined at:\r\n   * https://github.com/jasonmayes/mdl-component-design-pattern\r\n   *\r\n   * @constructor\r\n   * @param {HTMLElement} element The element that will be upgraded.\r\n   */\n\n  var MaterialTextfield = function MaterialTextfield(element) {\n    this.element_ = element;\n    this.maxRows = this.Constant_.NO_MAX_ROWS;\n    // Initialize instance.\n    this.init();\n  };\n  window['MaterialTextfield'] = MaterialTextfield;\n\n  /**\r\n   * Store constants in one place so they can be updated easily.\r\n   *\r\n   * @enum {string | number}\r\n   * @private\r\n   */\n  MaterialTextfield.prototype.Constant_ = {\n    NO_MAX_ROWS: -1,\n    MAX_ROWS_ATTRIBUTE: 'maxrows'\n  };\n\n  /**\r\n   * Store strings for class names defined by this component that are used in\r\n   * JavaScript. This allows us to simply change it in one place should we\r\n   * decide to modify at a later date.\r\n   *\r\n   * @enum {string}\r\n   * @private\r\n   */\n  MaterialTextfield.prototype.CssClasses_ = {\n    LABEL: 'mdl-textfield__label',\n    INPUT: 'mdl-textfield__input',\n    IS_DIRTY: 'is-dirty',\n    IS_FOCUSED: 'is-focused',\n    IS_DISABLED: 'is-disabled',\n    IS_INVALID: 'is-invalid',\n    IS_UPGRADED: 'is-upgraded',\n    HAS_PLACEHOLDER: 'has-placeholder'\n  };\n\n  /**\r\n   * Handle input being entered.\r\n   *\r\n   * @param {Event} event The event that fired.\r\n   * @private\r\n   */\n  MaterialTextfield.prototype.onKeyDown_ = function (event) {\n    var currentRowCount = event.target.value.split('\\n').length;\n    if (event.keyCode === 13) {\n      if (currentRowCount >= this.maxRows) {\n        event.preventDefault();\n      }\n    }\n  };\n\n  /**\r\n   * Handle focus.\r\n   *\r\n   * @param {Event} event The event that fired.\r\n   * @private\r\n   */\n  MaterialTextfield.prototype.onFocus_ = function (event) {\n    this.element_.classList.add(this.CssClasses_.IS_FOCUSED);\n  };\n\n  /**\r\n   * Handle lost focus.\r\n   *\r\n   * @param {Event} event The event that fired.\r\n   * @private\r\n   */\n  MaterialTextfield.prototype.onBlur_ = function (event) {\n    this.element_.classList.remove(this.CssClasses_.IS_FOCUSED);\n  };\n\n  /**\r\n   * Handle reset event from out side.\r\n   *\r\n   * @param {Event} event The event that fired.\r\n   * @private\r\n   */\n  MaterialTextfield.prototype.onReset_ = function (event) {\n    this.updateClasses_();\n  };\n\n  /**\r\n   * Handle class updates.\r\n   *\r\n   * @private\r\n   */\n  MaterialTextfield.prototype.updateClasses_ = function () {\n    this.checkDisabled();\n    this.checkValidity();\n    this.checkDirty();\n    this.checkFocus();\n  };\n\n  // Public methods.\n\n  /**\r\n   * Check the disabled state and update field accordingly.\r\n   *\r\n   * @public\r\n   */\n  MaterialTextfield.prototype.checkDisabled = function () {\n    if (this.input_.disabled) {\n      this.element_.classList.add(this.CssClasses_.IS_DISABLED);\n    } else {\n      this.element_.classList.remove(this.CssClasses_.IS_DISABLED);\n    }\n  };\n  MaterialTextfield.prototype['checkDisabled'] = MaterialTextfield.prototype.checkDisabled;\n\n  /**\r\n  * Check the focus state and update field accordingly.\r\n  *\r\n  * @public\r\n  */\n  MaterialTextfield.prototype.checkFocus = function () {\n    if (Boolean(this.element_.querySelector(':focus'))) {\n      this.element_.classList.add(this.CssClasses_.IS_FOCUSED);\n    } else {\n      this.element_.classList.remove(this.CssClasses_.IS_FOCUSED);\n    }\n  };\n  MaterialTextfield.prototype['checkFocus'] = MaterialTextfield.prototype.checkFocus;\n\n  /**\r\n   * Check the validity state and update field accordingly.\r\n   *\r\n   * @public\r\n   */\n  MaterialTextfield.prototype.checkValidity = function () {\n    if (this.input_.validity) {\n      if (this.input_.validity.valid) {\n        this.element_.classList.remove(this.CssClasses_.IS_INVALID);\n      } else {\n        this.element_.classList.add(this.CssClasses_.IS_INVALID);\n      }\n    }\n  };\n  MaterialTextfield.prototype['checkValidity'] = MaterialTextfield.prototype.checkValidity;\n\n  /**\r\n   * Check the dirty state and update field accordingly.\r\n   *\r\n   * @public\r\n   */\n  MaterialTextfield.prototype.checkDirty = function () {\n    if (this.input_.value && this.input_.value.length > 0) {\n      this.element_.classList.add(this.CssClasses_.IS_DIRTY);\n    } else {\n      this.element_.classList.remove(this.CssClasses_.IS_DIRTY);\n    }\n  };\n  MaterialTextfield.prototype['checkDirty'] = MaterialTextfield.prototype.checkDirty;\n\n  /**\r\n   * Disable text field.\r\n   *\r\n   * @public\r\n   */\n  MaterialTextfield.prototype.disable = function () {\n    this.input_.disabled = true;\n    this.updateClasses_();\n  };\n  MaterialTextfield.prototype['disable'] = MaterialTextfield.prototype.disable;\n\n  /**\r\n   * Enable text field.\r\n   *\r\n   * @public\r\n   */\n  MaterialTextfield.prototype.enable = function () {\n    this.input_.disabled = false;\n    this.updateClasses_();\n  };\n  MaterialTextfield.prototype['enable'] = MaterialTextfield.prototype.enable;\n\n  /**\r\n   * Update text field value.\r\n   *\r\n   * @param {string} value The value to which to set the control (optional).\r\n   * @public\r\n   */\n  MaterialTextfield.prototype.change = function (value) {\n\n    this.input_.value = value || '';\n    this.updateClasses_();\n  };\n  MaterialTextfield.prototype['change'] = MaterialTextfield.prototype.change;\n\n  /**\r\n   * Initialize element.\r\n   */\n  MaterialTextfield.prototype.init = function () {\n\n    if (this.element_) {\n      this.label_ = this.element_.querySelector('.' + this.CssClasses_.LABEL);\n      this.input_ = this.element_.querySelector('.' + this.CssClasses_.INPUT);\n\n      if (this.input_) {\n        if (this.input_.hasAttribute(\n        /** @type {string} */this.Constant_.MAX_ROWS_ATTRIBUTE)) {\n          this.maxRows = parseInt(this.input_.getAttribute(\n          /** @type {string} */this.Constant_.MAX_ROWS_ATTRIBUTE), 10);\n          if (isNaN(this.maxRows)) {\n            this.maxRows = this.Constant_.NO_MAX_ROWS;\n          }\n        }\n\n        if (this.input_.hasAttribute('placeholder')) {\n          this.element_.classList.add(this.CssClasses_.HAS_PLACEHOLDER);\n        }\n\n        this.boundUpdateClassesHandler = this.updateClasses_.bind(this);\n        this.boundFocusHandler = this.onFocus_.bind(this);\n        this.boundBlurHandler = this.onBlur_.bind(this);\n        this.boundResetHandler = this.onReset_.bind(this);\n        this.input_.addEventListener('input', this.boundUpdateClassesHandler);\n        this.input_.addEventListener('focus', this.boundFocusHandler);\n        this.input_.addEventListener('blur', this.boundBlurHandler);\n        this.input_.addEventListener('reset', this.boundResetHandler);\n\n        if (this.maxRows !== this.Constant_.NO_MAX_ROWS) {\n          // TODO: This should handle pasting multi line text.\n          // Currently doesn't.\n          this.boundKeyDownHandler = this.onKeyDown_.bind(this);\n          this.input_.addEventListener('keydown', this.boundKeyDownHandler);\n        }\n        var invalid = this.element_.classList.contains(this.CssClasses_.IS_INVALID);\n        this.updateClasses_();\n        this.element_.classList.add(this.CssClasses_.IS_UPGRADED);\n        if (invalid) {\n          this.element_.classList.add(this.CssClasses_.IS_INVALID);\n        }\n        if (this.input_.hasAttribute('autofocus')) {\n          this.element_.focus();\n          this.checkFocus();\n        }\n      }\n    }\n  };\n\n  // The component registers itself. It can assume componentHandler is available\n  // in the global scope.\n  componentHandler.register({\n    constructor: MaterialTextfield,\n    classAsString: 'MaterialTextfield',\n    cssClass: 'mdl-js-textfield',\n    widget: true\n  });\n})();","'use strict';\n\n/**\r\n * @license\r\n * Copyright 2015 Google Inc. All Rights Reserved.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *      http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n(function () {\n  'use strict';\n\n  /**\r\n   * Class constructor for Tooltip MDL component.\r\n   * Implements MDL component design pattern defined at:\r\n   * https://github.com/jasonmayes/mdl-component-design-pattern\r\n   *\r\n   * @constructor\r\n   * @param {HTMLElement} element The element that will be upgraded.\r\n   */\n\n  var MaterialTooltip = function MaterialTooltip(element) {\n    this.element_ = element;\n\n    // Initialize instance.\n    this.init();\n  };\n  window['MaterialTooltip'] = MaterialTooltip;\n\n  /**\r\n   * Store constants in one place so they can be updated easily.\r\n   *\r\n   * @enum {string | number}\r\n   * @private\r\n   */\n  MaterialTooltip.prototype.Constant_ = {\n    // None for now.\n  };\n\n  /**\r\n   * Store strings for class names defined by this component that are used in\r\n   * JavaScript. This allows us to simply change it in one place should we\r\n   * decide to modify at a later date.\r\n   *\r\n   * @enum {string}\r\n   * @private\r\n   */\n  MaterialTooltip.prototype.CssClasses_ = {\n    IS_ACTIVE: 'is-active',\n    BOTTOM: 'mdl-tooltip--bottom',\n    LEFT: 'mdl-tooltip--left',\n    RIGHT: 'mdl-tooltip--right',\n    TOP: 'mdl-tooltip--top'\n  };\n\n  /**\r\n   * Handle mouseenter for tooltip.\r\n   *\r\n   * @param {Event} event The event that fired.\r\n   * @private\r\n   */\n  MaterialTooltip.prototype.handleMouseEnter_ = function (event) {\n    var props = event.target.getBoundingClientRect();\n    var left = props.left + props.width / 2;\n    var top = props.top + props.height / 2;\n    var marginLeft = -1 * (this.element_.offsetWidth / 2);\n    var marginTop = -1 * (this.element_.offsetHeight / 2);\n\n    if (this.element_.classList.contains(this.CssClasses_.LEFT) || this.element_.classList.contains(this.CssClasses_.RIGHT)) {\n      left = props.width / 2;\n      if (top + marginTop < 0) {\n        this.element_.style.top = '0';\n        this.element_.style.marginTop = '0';\n      } else {\n        this.element_.style.top = top + 'px';\n        this.element_.style.marginTop = marginTop + 'px';\n      }\n    } else {\n      if (left + marginLeft < 0) {\n        this.element_.style.left = '0';\n        this.element_.style.marginLeft = '0';\n      } else {\n        this.element_.style.left = left + 'px';\n        this.element_.style.marginLeft = marginLeft + 'px';\n      }\n    }\n\n    if (this.element_.classList.contains(this.CssClasses_.TOP)) {\n      this.element_.style.top = props.top - this.element_.offsetHeight - 10 + 'px';\n    } else if (this.element_.classList.contains(this.CssClasses_.RIGHT)) {\n      this.element_.style.left = props.left + props.width + 10 + 'px';\n    } else if (this.element_.classList.contains(this.CssClasses_.LEFT)) {\n      this.element_.style.left = props.left - this.element_.offsetWidth - 10 + 'px';\n    } else {\n      this.element_.style.top = props.top + props.height + 10 + 'px';\n    }\n\n    this.element_.classList.add(this.CssClasses_.IS_ACTIVE);\n  };\n\n  /**\r\n   * Hide tooltip on mouseleave or scroll\r\n   *\r\n   * @private\r\n   */\n  MaterialTooltip.prototype.hideTooltip_ = function () {\n    this.element_.classList.remove(this.CssClasses_.IS_ACTIVE);\n  };\n\n  /**\r\n   * Initialize element.\r\n   */\n  MaterialTooltip.prototype.init = function () {\n\n    if (this.element_) {\n      var forElId = this.element_.getAttribute('for') || this.element_.getAttribute('data-mdl-for');\n\n      if (forElId) {\n        this.forElement_ = document.getElementById(forElId);\n      }\n\n      if (this.forElement_) {\n        // It's left here because it prevents accidental text selection on Android\n        if (!this.forElement_.hasAttribute('tabindex')) {\n          this.forElement_.setAttribute('tabindex', '0');\n        }\n\n        this.boundMouseEnterHandler = this.handleMouseEnter_.bind(this);\n        this.boundMouseLeaveAndScrollHandler = this.hideTooltip_.bind(this);\n        this.forElement_.addEventListener('mouseenter', this.boundMouseEnterHandler, false);\n        this.forElement_.addEventListener('touchend', this.boundMouseEnterHandler, false);\n        this.forElement_.addEventListener('mouseleave', this.boundMouseLeaveAndScrollHandler, false);\n        window.addEventListener('scroll', this.boundMouseLeaveAndScrollHandler, true);\n        window.addEventListener('touchstart', this.boundMouseLeaveAndScrollHandler);\n      }\n    }\n  };\n\n  // The component registers itself. It can assume componentHandler is available\n  // in the global scope.\n  componentHandler.register({\n    constructor: MaterialTooltip,\n    classAsString: 'MaterialTooltip',\n    cssClass: 'mdl-tooltip'\n  });\n})();","'use strict';\n\nvar utils = function () {\n\n  return {\n\n    parseSvg: function parseSvg(svg) {\n      var sMyString = svg;\n      var oParser = new DOMParser();\n      var oDOM = oParser.parseFromString(sMyString, \"text/xml\");\n\n      return oDOM.documentElement;\n    },\n    addElement: function addElement(tag, cls, id, text, val, attr) {\n      var el = document.createElement(tag);\n\n      if (cls) el.className = cls;\n      if (id) el.id = id;\n      if (val || typeof val == 'number') el.value = val;\n      if (text || typeof val == 'number') el.textContent = text;\n      if (attr) {\n        for (var prop in attr) {\n          el.setAttribute(prop, attr[prop]);\n        }\n      }\n\n      return el;\n    },\n    buildCustomDom: function buildCustomDom(html) {\n      var doc = document.implementation.createHTMLDocument();\n      doc.documentElement.innerHTML = html;\n\n      return doc;\n    },\n    extend: function extend(f, o, p) {\n\n      var o1 = {};\n      var prop;\n\n      if (f) {\n        for (prop in o) {\n          o1[prop] = o[prop];\n        }\n      }\n\n      for (prop in p) {\n        f ? o1[prop] = p[prop] : o[prop] = p[prop];\n      }\n\n      return f ? o1 : o;\n    }\n  };\n}();"]}